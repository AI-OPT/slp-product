<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ai.slp.product.dao.mapper.interfaces.SysSequencesMapper" >
  <resultMap id="BaseResultMap" type="com.ai.slp.product.dao.mapper.bo.SysSequences" >
    <id column="SEQUENCE_NAME" property="sequenceName" jdbcType="VARCHAR" />
    <result column="START_BY" property="startBy" jdbcType="BIGINT" />
    <result column="INCREMENT_BY" property="incrementBy" jdbcType="BIGINT" />
    <result column="LAST_NUMBER" property="lastNumber" jdbcType="BIGINT" />
    <result column="JVM_STEP_BY" property="jvmStepBy" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    SEQUENCE_NAME, START_BY, INCREMENT_BY, LAST_NUMBER, JVM_STEP_BY
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ai.slp.product.dao.mapper.bo.SysSequencesCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from sys_sequences
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from sys_sequences
    where SEQUENCE_NAME = #{sequenceName,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from sys_sequences
    where SEQUENCE_NAME = #{sequenceName,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.ai.slp.product.dao.mapper.bo.SysSequencesCriteria" >
    delete from sys_sequences
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ai.slp.product.dao.mapper.bo.SysSequences" >
    insert into sys_sequences (SEQUENCE_NAME, START_BY, INCREMENT_BY, 
      LAST_NUMBER, JVM_STEP_BY)
    values (#{sequenceName,jdbcType=VARCHAR}, #{startBy,jdbcType=BIGINT}, #{incrementBy,jdbcType=BIGINT}, 
      #{lastNumber,jdbcType=BIGINT}, #{jvmStepBy,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.ai.slp.product.dao.mapper.bo.SysSequences" >
    insert into sys_sequences
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sequenceName != null" >
        SEQUENCE_NAME,
      </if>
      <if test="startBy != null" >
        START_BY,
      </if>
      <if test="incrementBy != null" >
        INCREMENT_BY,
      </if>
      <if test="lastNumber != null" >
        LAST_NUMBER,
      </if>
      <if test="jvmStepBy != null" >
        JVM_STEP_BY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sequenceName != null" >
        #{sequenceName,jdbcType=VARCHAR},
      </if>
      <if test="startBy != null" >
        #{startBy,jdbcType=BIGINT},
      </if>
      <if test="incrementBy != null" >
        #{incrementBy,jdbcType=BIGINT},
      </if>
      <if test="lastNumber != null" >
        #{lastNumber,jdbcType=BIGINT},
      </if>
      <if test="jvmStepBy != null" >
        #{jvmStepBy,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ai.slp.product.dao.mapper.bo.SysSequencesCriteria" resultType="java.lang.Integer" >
    select count(*) from sys_sequences
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sys_sequences
    <set >
      <if test="record.sequenceName != null" >
        SEQUENCE_NAME = #{record.sequenceName,jdbcType=VARCHAR},
      </if>
      <if test="record.startBy != null" >
        START_BY = #{record.startBy,jdbcType=BIGINT},
      </if>
      <if test="record.incrementBy != null" >
        INCREMENT_BY = #{record.incrementBy,jdbcType=BIGINT},
      </if>
      <if test="record.lastNumber != null" >
        LAST_NUMBER = #{record.lastNumber,jdbcType=BIGINT},
      </if>
      <if test="record.jvmStepBy != null" >
        JVM_STEP_BY = #{record.jvmStepBy,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sys_sequences
    set SEQUENCE_NAME = #{record.sequenceName,jdbcType=VARCHAR},
      START_BY = #{record.startBy,jdbcType=BIGINT},
      INCREMENT_BY = #{record.incrementBy,jdbcType=BIGINT},
      LAST_NUMBER = #{record.lastNumber,jdbcType=BIGINT},
      JVM_STEP_BY = #{record.jvmStepBy,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ai.slp.product.dao.mapper.bo.SysSequences" >
    update sys_sequences
    <set >
      <if test="startBy != null" >
        START_BY = #{startBy,jdbcType=BIGINT},
      </if>
      <if test="incrementBy != null" >
        INCREMENT_BY = #{incrementBy,jdbcType=BIGINT},
      </if>
      <if test="lastNumber != null" >
        LAST_NUMBER = #{lastNumber,jdbcType=BIGINT},
      </if>
      <if test="jvmStepBy != null" >
        JVM_STEP_BY = #{jvmStepBy,jdbcType=BIGINT},
      </if>
    </set>
    where SEQUENCE_NAME = #{sequenceName,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ai.slp.product.dao.mapper.bo.SysSequences" >
    update sys_sequences
    set START_BY = #{startBy,jdbcType=BIGINT},
      INCREMENT_BY = #{incrementBy,jdbcType=BIGINT},
      LAST_NUMBER = #{lastNumber,jdbcType=BIGINT},
      JVM_STEP_BY = #{jvmStepBy,jdbcType=BIGINT}
    where SEQUENCE_NAME = #{sequenceName,jdbcType=VARCHAR}
  </update>
</mapper>